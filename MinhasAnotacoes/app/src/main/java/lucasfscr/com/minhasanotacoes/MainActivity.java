package lucasfscr.com.minhasanotacoes;import android.app.Activity;import android.content.Context;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.EditText;import android.widget.ImageView;import android.widget.Toast;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.OutputStreamWriter;import butterknife.BindView;import butterknife.ButterKnife;public class MainActivity extends Activity {    @BindView(R.id.textField)    EditText textField;    @BindView(R.id.imgSave)    ImageView imgSave;    private String ARCHIVE_NAME = "anotation.txt";    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        ButterKnife.bind(this);        imgSave.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                String text = textField.getText().toString();                saveOnArchive(text);            }        });        if(readOnArchive() != null){            textField.setText(readOnArchive());        }    }    private void saveOnArchive(String text) {        try{            OutputStreamWriter outputStreamWriter = new OutputStreamWriter(openFileOutput(ARCHIVE_NAME, Context.MODE_PRIVATE));            outputStreamWriter.write(text);            outputStreamWriter.close();            Toast.makeText(this, "Text saved", Toast.LENGTH_SHORT).show();        }catch (IOException e){            Log.v("MainActivity", e.toString());        }    }    private String readOnArchive(){        String result = "";        try{            InputStream inputStream = openFileInput(ARCHIVE_NAME);            if(inputStream != null){                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);                String archiveLine = "";                while((archiveLine = bufferedReader.readLine()) != null){                    result += archiveLine;                }                inputStream.close();            }        }catch (IOException e){            Log.v("MainActivity", e.toString());        }        return result;    }}